BEGIN
DECLARE v_ID_REGISTRO INT;
DECLARE v_PROD_ID INT;
DECLARE v_CANT INT;
DECLARE v_FECHA_VENC DATE;
DECLARE NOT_FOUND INT DEFAULT 0;

DECLARE CUR CURSOR FOR SELECT DETV_ID FROM TD_VENTA_DETALLE WHERE VENT_ID=p_VENT_ID;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET NOT_FOUND = 1;

UPDATE TM_VENTA
SET
PAG_ID = p_PAG_ID,
CLI_ID = p_CLI_ID,
CLI_RUC = p_CLI_RUC,
CLI_DIRECC = p_CLI_DIRECC,
CLI_CORREO = p_CLI_CORREO,
VENT_COMENT = p_VENT_COMENT,
MON_ID = p_MON_ID,
DOC_ID = p_DOC_ID,
FECH_CREA = NOW(3),
EST = 1,
VENT_FECHA_VENC = DATE_ADD(p_VENT_FECHA_EMISION, INTERVAL p_VENT_PLAZO_PAGO DAY) -- CÃ¡lculo de la fecha de vencimiento
WHERE
VENT_ID = p_VENT_ID;

OPEN CUR;
FETCH NEXT FROM CUR INTO v_ID_REGISTRO;
WHILE NOT_FOUND=0
DO
SELECT PROD_ID INTO v_PROD_ID FROM TD_VENTA_DETALLE WHERE DETV_ID = v_ID_REGISTRO;
SELECT DETV_CANT INTO v_CANT FROM TD_VENTA_DETALLE WHERE DETV_ID = v_ID_REGISTRO;

UPDATE TM_PRODUCTO
SET
PROD_STOCK = PROD_STOCK - v_CANT
WHERE
PROD_ID = v_PROD_ID;

FETCH NEXT FROM CUR INTO v_ID_REGISTRO;
END WHILE;
CLOSE CUR;
END

// Original ---------------------------------------
BEGIN
 DECLARE v_ID_REGISTRO INT;    
 DECLARE v_PROD_ID INT;    
 DECLARE v_CANT INT;    
DECLARE NOT_FOUND INT DEFAULT 0;  

 DECLARE CUR CURSOR FOR SELECT DETV_ID FROM TD_VENTA_DETALLE WHERE VENT_ID=p_VENT_ID;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET NOT_FOUND = 1;    
  
 UPDATE TM_VENTA    
 SET    
  PAG_ID = p_PAG_ID,    
  CLI_ID = p_CLI_ID,    
  CLI_RUC = p_CLI_RUC,    
  CLI_DIRECC = p_CLI_DIRECC,    
  CLI_CORREO = p_CLI_CORREO,    
  VENT_COMENT = p_VENT_COMENT,    
  MON_ID = p_MON_ID,
  DOC_ID = p_DOC_ID,
  FECH_CREA = NOW(3),    
  EST = 1    
 WHERE    
  VENT_ID = p_VENT_ID;    
     
 OPEN CUR;    
 FETCH NEXT FROM CUR INTO v_ID_REGISTRO;    
 WHILE NOT_FOUND=0    
  DO    
   -- SQLINES LICENSE FOR EVALUATION USE ONLY
   SELECT PROD_ID INTO v_PROD_ID FROM TD_VENTA_DETALLE WHERE DETV_ID = v_ID_REGISTRO;    
       
   -- SQLINES LICENSE FOR EVALUATION USE ONLY
   SELECT DETV_CANT INTO v_CANT FROM TD_VENTA_DETALLE WHERE DETV_ID = v_ID_REGISTRO;    
    
   UPDATE TM_PRODUCTO    
   SET    
    PROD_STOCK = PROD_STOCK - v_CANT    
   WHERE    
    PROD_ID = v_PROD_ID;    
    
   FETCH NEXT FROM CUR INTO v_ID_REGISTRO;    
  END WHILE;    
 CLOSE CUR;    
END


//


BEGIN
 DECLARE v_ID_REGISTRO INT;    
 DECLARE v_PROD_ID INT;    
 DECLARE v_CANT INT;    
DECLARE NOT_FOUND INT DEFAULT 0;  

 DECLARE CUR CURSOR FOR SELECT DETV_ID FROM TD_VENTA_DETALLE WHERE VENT_ID=p_VENT_ID;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET NOT_FOUND = 1;    
  
 UPDATE TM_VENTA    
 SET    
  PAG_ID = p_PAG_ID,    
  CLI_ID = p_CLI_ID,    
  CLI_RUC = p_CLI_RUC,    
  CLI_DIRECC = p_CLI_DIRECC,    
  CLI_CORREO = p_CLI_CORREO,    
  VENT_COMENT = p_VENT_COMENT, 
  CLI_PLAZO = v_PLAZO;
  MON_ID = p_MON_ID,
  DOC_ID = p_DOC_ID,
  FECH_CREA = NOW(3),
  FECH_VENC = DATE_ADD(NOW(3), INTERVAL v_PLAZO DAY),
  EST = 1    
 WHERE    
  VENT_ID = p_VENT_ID;    
     
 OPEN CUR;    
 FETCH NEXT FROM CUR INTO v_ID_REGISTRO;    
 WHILE NOT_FOUND=0    
  DO    
   -- SQLINES LICENSE FOR EVALUATION USE ONLY
   SELECT PROD_ID INTO v_PROD_ID FROM TD_VENTA_DETALLE WHERE DETV_ID = v_ID_REGISTRO;    
       
   -- SQLINES LICENSE FOR EVALUATION USE ONLY
   SELECT DETV_CANT INTO v_CANT FROM TD_VENTA_DETALLE WHERE DETV_ID = v_ID_REGISTRO;    
    
   UPDATE TM_PRODUCTO    
   SET    
    PROD_STOCK = PROD_STOCK - v_CANT    
   WHERE    
    PROD_ID = v_PROD_ID;    
    
   FETCH NEXT FROM CUR INTO v_ID_REGISTRO;    
  END WHILE;    
 CLOSE CUR;    
END


SP_U_VENTA_03


DELIMITER $$
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_U_VENTA_03`(`p_VENT_ID` INT, `p_PAG_ID` INT, `p_CLI_ID` INT, `p_CLI_RUC` VARCHAR(20), `p_CLI_DIRECC` VARCHAR(150), `p_CLI_CORREO` VARCHAR(150), `p_VENT_COMENT` VARCHAR(250), `p_MON_ID` INT, `p_DOC_ID` INT)
BEGIN
 DECLARE v_ID_REGISTRO INT;    
 DECLARE v_PROD_ID INT;    
 DECLARE v_CANT INT;    
DECLARE NOT_FOUND INT DEFAULT 0;  

 DECLARE CUR CURSOR FOR SELECT DETV_ID FROM TD_VENTA_DETALLE WHERE VENT_ID=p_VENT_ID;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET NOT_FOUND = 1;    
  
 UPDATE TM_VENTA    
 SET    
  PAG_ID = p_PAG_ID,    
  CLI_ID = p_CLI_ID,    
  CLI_RUC = p_CLI_RUC,    
  CLI_DIRECC = p_CLI_DIRECC,    
  CLI_CORREO = p_CLI_CORREO,    
  VENT_COMENT = p_VENT_COMENT,    
  MON_ID = p_MON_ID,
  DOC_ID = p_DOC_ID,
  FECH_CREA = NOW(3),    
  EST = 1    
 WHERE    
  VENT_ID = p_VENT_ID;    
     
 OPEN CUR;    
 FETCH NEXT FROM CUR INTO v_ID_REGISTRO;    
 WHILE NOT_FOUND=0    
  DO    
   -- SQLINES LICENSE FOR EVALUATION USE ONLY
   SELECT PROD_ID INTO v_PROD_ID FROM TD_VENTA_DETALLE WHERE DETV_ID = v_ID_REGISTRO;    
       
   -- SQLINES LICENSE FOR EVALUATION USE ONLY
   SELECT DETV_CANT INTO v_CANT FROM TD_VENTA_DETALLE WHERE DETV_ID = v_ID_REGISTRO;    
    
   UPDATE TM_PRODUCTO    
   SET    
    PROD_STOCK = PROD_STOCK - v_CANT    
   WHERE    
    PROD_ID = v_PROD_ID;    
    
   FETCH NEXT FROM CUR INTO v_ID_REGISTRO;    
  END WHILE;    
 CLOSE CUR;    
END$$
DELIMITER ;